set tests [find $srcdir/$subdir *.sh]

set pwd [pwd]

set env(PATH) $srcdir/scripts:$::env(PATH)
set env(execs) $pwd

foreach test $tests {
    global runtests

    set basename [exec basename $test]

    if ![runtest_file_p $runtests $basename] {
	continue
    }

    set required_execs []
    if { $basename == "pr24171.sh" } {
	lappend required_execs "dw2-restrict"
    }
    if { $basename == "pr24173.sh" } {
	lappend required_execs "py-section-script"
    }
    if { $basename == "pr24341.sh" } {
	# The exec min is used for the regression test for pr24341, but it only
	# functions as such if the DWARF only contains the CUs of the test-case
	# itself.
	set matches [exec readelf -wi min | grep DW_AT_name | grep -c / ]
	if { $matches != 2 } {
	    unsupported "$test"
	    continue
	}
    }

    set unsupported 0
    foreach required_exec $required_execs {
	set size [file size $required_exec]
	if { $size == 0 } {
	    set unsupported 1
	}
    }
    if { $unsupported == 1 } {
	unsupported "$test"
	continue
    }

    set dir $pwd/tmp.$basename
    exec rm -Rf $dir
    exec mkdir $dir

    cd $dir
    if { [catch { exec sh -e $test } msg] } {
	puts "$msg"
	fail "$test"
    } else {
	if { [file exists dwz.info ] } {
	    set info [exec cat dwz.info]
	    verbose -log "$test:" 1
	    verbose -log "$info" 1
	    exec rm -f dwz.info
	}
	set file_list [glob -nocomplain "$dir/*"]
	if {[llength $file_list] != 0} {
	    puts "$dir is not empty"
	    fail "$test"
	} else {
	    pass "$test"
	    exec rm -Rf $dir
	}
    }
    cd $pwd
}
